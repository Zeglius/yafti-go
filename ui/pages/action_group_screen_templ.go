// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/Zeglius/yafti-go/config"
	"github.com/Zeglius/yafti-go/ui/components"
)

// ActionGroupScreen displays a list of actions with toggles.
//
// One is assigned per each element at `screens.[]` in the config file.
func ActionGroupScreen(screen config.Screen) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"container max-w-2xl mx-auto flex flex-col my-8\"><div class=\"mb-8\"><h2 class=\"text-3xl font-bold mb-2\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(screen.Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `ui/pages/action_group_screen.templ`, Line: 15, Col: 54}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</h2><p class=\"text-gray-600\">Select the options you'd like to install</p></div><div class=\"bg-white rounded-lg shadow-md p-6\"><form id=\"actionForm\" method=\"POST\" action=\"/confirm_changes\" class=\"flex flex-col gap-4\"><input type=\"hidden\" id=\"scriptIdsInput\" name=\"scriptIds\" value=\"{}\"> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, act := range screen.Actions {
				templ_7745c5c3_Err = components.ActionToggle(act).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\"flex justify-between mt-6\"><a href=\"/\" class=\"btn btn-outline\">Back to Home</a> <button type=\"button\" class=\"btn btn-primary\" onclick=\"prepareAndSubmit()\">Continue</button></div></form></div></div><script>\n\t\t\tfunction prepareAndSubmit() {\n\t\t\t\t// Build a JSON object for selected actions\n\t\t\t\tconst selectedActions = {};\n\t\t\t\tdocument.querySelectorAll('input[type=\"checkbox\"][name=\"script_ids\"]').forEach(checkbox => {\n\t\t\t\t\tselectedActions[checkbox.value] = checkbox.checked ? 'true' : 'false';\n\t\t\t\t});\n\n\t\t\t\t// Set the cookie with the JSON data\n\t\t\t\tdocument.cookie = \"script_ids=\" + JSON.stringify(selectedActions) + \"; path=/; SameSite=Strict\";\n\t\t\t\t\n\t\t\t\t// Also include the data in the form submission\n\t\t\t\tdocument.getElementById('scriptIdsInput').value = JSON.stringify(selectedActions);\n\t\t\t\t\n\t\t\t\t// Submit the form\n\t\t\t\tdocument.getElementById('actionForm').submit();\n\t\t\t}\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = components.Layout(screen.Title).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
