package components

import "github.com/Zeglius/yafti-go/internal/consts"
import "strconv"

templ Layout(title string) {
	<!DOCTYPE html>
	<html lang="en" data-theme="light">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<script src="/static/js/htmx.min.js"></script>
			<link href="/static/css/daisyui.css" rel="stylesheet" type="text/css"/>
			<script src="/static/js/tailwindcss.js"></script>
			<script src="/static/js/hyperscript.js"></script>
			<style>
				:root {
					--bazzite-purple: #6446fa;
					--bazzite-purple-dark: #5639e0;
					--bazzite-text: #333333;
					--bazzite-bg: #f5f5f7;
				}
				body {
					font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
					background-color: var(--bazzite-bg);
					color: var(--bazzite-text);
					padding-top: 60px; /* Add padding to prevent content from hiding under the sticky header */
					min-height: 100vh;
					display: flex;
					flex-direction: column;
				}
				.btn-primary {
					background-color: var(--bazzite-purple) !important;
					border-color: var(--bazzite-purple) !important;
				}
				.btn-primary:hover {
					background-color: var(--bazzite-purple-dark) !important;
					border-color: var(--bazzite-purple-dark) !important;
				}
				.navbar {
					background-color: #222222;
					padding: 0.5rem 1rem;
					height: 60px;
				}
				.navbar a {
					color: white;
					font-weight: normal;
				}
				.logo {
					display: flex;
					align-items: center;
				}
				.logo img {
					height: 32px;
					width: auto;
				}
				.sticky-header {
					position: fixed;
					top: 0;
					left: 0;
					right: 0;
					z-index: 1000;
					box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
				}
				.nav-links {
					display: flex;
					gap: 24px;
				}
				.nav-links a {
					text-decoration: none;
				}
				main {
					flex: 1;
					display: flex;
					flex-direction: column;
				}
				.theme-toggle {
					color: white;
					cursor: pointer;
					display: flex;
					align-items: center;
					justify-content: center;
					margin-left: 10px;
					width: 40px;
					height: 40px;
					border-radius: 50%;
					transition: background-color 0.2s;
				}
				.theme-toggle:hover {
					background-color: rgba(255, 255, 255, 0.1);
				}
				.theme-toggle svg {
					width: 20px;
					height: 20px;
				}

				/* Dark theme adjustments */
				[data-theme="dark"] {
					--bazzite-bg: #121212;
					--bazzite-text: #f5f5f7;
				}
				[data-theme="dark"] body {
					background-color: var(--bazzite-bg);
					color: var(--bazzite-text);
				}
				[data-theme="dark"] h1,
				[data-theme="dark"] h2,
				[data-theme="dark"] h3,
				[data-theme="dark"] h4,
				[data-theme="dark"] h5,
				[data-theme="dark"] h6 {
					color: #f5f5f7;
				}
				[data-theme="dark"] p {
					color: #e1e1e1;
				}
				[data-theme="dark"] .container {
					color: #e1e1e1;
				}
				[data-theme="dark"] .card,
				[data-theme="dark"] [class*="bg-white"] {
					background-color: #222 !important;
				}
				/* Fix for code blocks with bg-gray-100 class */
				[data-theme="dark"] .bg-gray-100 {
					background-color: #2d2d2d !important;
				}
				/* Handle toggle switches in dark mode */
				[data-theme="dark"] .theme-toggle {
					background-color: rgba(255, 255, 255, 0.1);
				}
			</style>
			<script>
				// Initialize theme immediately before DOM is ready to avoid flashing
				(function() {
					const savedTheme = localStorage.getItem('theme') || 'light';
					document.documentElement.setAttribute('data-theme', savedTheme);
				})();

				// Handle theme toggle using event delegation to work with HTMX
				document.addEventListener('click', function(event) {
					// Find if the click was on the theme toggle or any of its children
					let target = event.target;
					while (target != null) {
						if (target.id === 'theme-toggle') {
							event.preventDefault();
							toggleTheme();
							return;
						}
						target = target.parentElement;
					}
				});

				function toggleTheme() {
					const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
					const newTheme = currentTheme === 'light' ? 'dark' : 'light';

					document.documentElement.setAttribute('data-theme', newTheme);
					localStorage.setItem('theme', newTheme);

					updateThemeIcon(newTheme);
				}

				function updateThemeIcon(theme) {
					const moonIcon = document.getElementById('moon-icon');
					const sunIcon = document.getElementById('sun-icon');

					if (moonIcon && sunIcon) {
						if (theme === 'dark') {
							moonIcon.style.display = 'none';
							sunIcon.style.display = 'block';
						} else {
							moonIcon.style.display = 'block';
							sunIcon.style.display = 'none';
						}
					}
				}

				// Update the theme icon after any HTMX content swap
				document.addEventListener('htmx:afterSettle', function() {
					const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
					updateThemeIcon(currentTheme);
				});

				// Ensure theme is applied and icons are updated when DOM is ready
				document.addEventListener('DOMContentLoaded', function() {
					const savedTheme = localStorage.getItem('theme') || 'light';
					document.documentElement.setAttribute('data-theme', savedTheme);
					updateThemeIcon(savedTheme);
				});
			</script>
			<title>{ title } | Bazzite Portal</title>
		</head>
		<body hx-boost="true">
			<!-- Trigger a heartbeat to keep the server alive -->
			<div hidden hx-swap="none">
				<div
					hx-get="/_/heartbeat"
					hx-trigger={ "every " + strconv.Itoa(consts.HEARTBEAT_SECONDS/2) + "s" }
				></div>
				<div hx-get="/_/heartbeat" hx-trigger="load"></div>
			</div>
			<header class="sticky-header">
				<nav class="navbar flex justify-between items-center">
					<div class="logo">
						<a href="/">
							<img src="/static/images/logo.png" alt="Bazzite Logo"/>
						</a>
					</div>
					<div class="nav-links flex items-center gap-6">
						<a href="/">Home</a>
						<a href="https://bazzite.gg" target="_blank">About</a>
						<a href="https://docs.bazzite.gg" target="_blank">Docs</a>
						<a id="theme-toggle" class="theme-toggle" href="#" aria-label="Toggle theme">
							<svg id="moon-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
							</svg>
							<svg id="sun-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="display:none;">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
							</svg>
						</a>
					</div>
				</nav>
			</header>
			<main>
				<div class="container mx-auto">
					{ children... }
				</div>
			</main>
		</body>
	</html>
}
