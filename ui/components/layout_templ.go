// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/Zeglius/yafti-go/internal/consts"
import "strconv"

func Layout(title string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><script src=\"/static/js/htmx.min.js\"></script><link href=\"/static/css/daisyui.css\" rel=\"stylesheet\" type=\"text/css\"><script src=\"/static/js/tailwindcss.js\"></script><script src=\"/static/js/hyperscript.js\"></script><style>\n\t\t\t\t:root {\n\t\t\t\t\t--bazzite-purple: #6446fa;\n\t\t\t\t\t--bazzite-purple-dark: #5639e0;\n\t\t\t\t\t--bazzite-text: #333333;\n\t\t\t\t\t--bazzite-bg: #f5f5f7;\n\t\t\t\t}\n\t\t\t\tbody {\n\t\t\t\t\tfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n\t\t\t\t\tbackground-color: var(--bazzite-bg);\n\t\t\t\t\tcolor: var(--bazzite-text);\n\t\t\t\t\tpadding-top: 60px; /* Add padding to prevent content from hiding under the sticky header */\n\t\t\t\t\tmin-height: 100vh;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t}\n\t\t\t\t.btn-primary {\n\t\t\t\t\tbackground-color: var(--bazzite-purple) !important;\n\t\t\t\t\tborder-color: var(--bazzite-purple) !important;\n\t\t\t\t}\n\t\t\t\t.btn-primary:hover {\n\t\t\t\t\tbackground-color: var(--bazzite-purple-dark) !important;\n\t\t\t\t\tborder-color: var(--bazzite-purple-dark) !important;\n\t\t\t\t}\n\t\t\t\t.navbar {\n\t\t\t\t\tbackground-color: #222222;\n\t\t\t\t\tpadding: 0.5rem 1rem;\n\t\t\t\t\theight: 60px;\n\t\t\t\t}\n\t\t\t\t.navbar a {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tfont-weight: normal;\n\t\t\t\t}\n\t\t\t\t.logo {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t}\n\t\t\t\t.logo img {\n\t\t\t\t\theight: 32px;\n\t\t\t\t\twidth: auto;\n\t\t\t\t}\n\t\t\t\t.sticky-header {\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tz-index: 1000;\n\t\t\t\t\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\t\t\t\t}\n\t\t\t\t.nav-links {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tgap: 24px;\n\t\t\t\t}\n\t\t\t\t.nav-links a {\n\t\t\t\t\ttext-decoration: none;\n\t\t\t\t}\n\t\t\t\tmain {\n\t\t\t\t\tflex: 1;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t}\n\t\t\t\t.theme-toggle {\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\twidth: 40px;\n\t\t\t\t\theight: 40px;\n\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\ttransition: background-color 0.2s;\n\t\t\t\t}\n\t\t\t\t.theme-toggle:hover {\n\t\t\t\t\tbackground-color: rgba(255, 255, 255, 0.1);\n\t\t\t\t}\n\t\t\t\t.theme-toggle svg {\n\t\t\t\t\twidth: 20px;\n\t\t\t\t\theight: 20px;\n\t\t\t\t}\n\n\t\t\t\t/* Dark theme adjustments */\n\t\t\t\t[data-theme=\"dark\"] {\n\t\t\t\t\t--bazzite-bg: #121212;\n\t\t\t\t\t--bazzite-text: #f5f5f7;\n\t\t\t\t}\n\t\t\t\t[data-theme=\"dark\"] body {\n\t\t\t\t\tbackground-color: var(--bazzite-bg);\n\t\t\t\t\tcolor: var(--bazzite-text);\n\t\t\t\t}\n\t\t\t\t[data-theme=\"dark\"] h1,\n\t\t\t\t[data-theme=\"dark\"] h2,\n\t\t\t\t[data-theme=\"dark\"] h3,\n\t\t\t\t[data-theme=\"dark\"] h4,\n\t\t\t\t[data-theme=\"dark\"] h5,\n\t\t\t\t[data-theme=\"dark\"] h6 {\n\t\t\t\t\tcolor: #f5f5f7;\n\t\t\t\t}\n\t\t\t\t[data-theme=\"dark\"] p {\n\t\t\t\t\tcolor: #e1e1e1;\n\t\t\t\t}\n\t\t\t\t[data-theme=\"dark\"] .container {\n\t\t\t\t\tcolor: #e1e1e1;\n\t\t\t\t}\n\t\t\t\t[data-theme=\"dark\"] .card,\n\t\t\t\t[data-theme=\"dark\"] [class*=\"bg-white\"] {\n\t\t\t\t\tbackground-color: #222 !important;\n\t\t\t\t}\n\t\t\t\t/* Fix for code blocks with bg-gray-100 class */\n\t\t\t\t[data-theme=\"dark\"] .bg-gray-100 {\n\t\t\t\t\tbackground-color: #2d2d2d !important;\n\t\t\t\t}\n\t\t\t\t/* Handle toggle switches in dark mode */\n\t\t\t\t[data-theme=\"dark\"] .theme-toggle {\n\t\t\t\t\tbackground-color: rgba(255, 255, 255, 0.1);\n\t\t\t\t}\n\t\t\t</style><script>\n\t\t\t\t// Initialize theme immediately before DOM is ready to avoid flashing\n\t\t\t\t(function() {\n\t\t\t\t\tconst savedTheme = localStorage.getItem('theme') || 'light';\n\t\t\t\t\tdocument.documentElement.setAttribute('data-theme', savedTheme);\n\t\t\t\t})();\n\n\t\t\t\t// Handle theme toggle using event delegation to work with HTMX\n\t\t\t\tdocument.addEventListener('click', function(event) {\n\t\t\t\t\t// Find if the click was on the theme toggle or any of its children\n\t\t\t\t\tlet target = event.target;\n\t\t\t\t\twhile (target != null) {\n\t\t\t\t\t\tif (target.id === 'theme-toggle') {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\ttoggleTheme();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttarget = target.parentElement;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tfunction toggleTheme() {\n\t\t\t\t\tconst currentTheme = document.documentElement.getAttribute('data-theme') || 'light';\n\t\t\t\t\tconst newTheme = currentTheme === 'light' ? 'dark' : 'light';\n\n\t\t\t\t\tdocument.documentElement.setAttribute('data-theme', newTheme);\n\t\t\t\t\tlocalStorage.setItem('theme', newTheme);\n\n\t\t\t\t\tupdateThemeIcon(newTheme);\n\t\t\t\t}\n\n\t\t\t\tfunction updateThemeIcon(theme) {\n\t\t\t\t\tconst moonIcon = document.getElementById('moon-icon');\n\t\t\t\t\tconst sunIcon = document.getElementById('sun-icon');\n\n\t\t\t\t\tif (moonIcon && sunIcon) {\n\t\t\t\t\t\tif (theme === 'dark') {\n\t\t\t\t\t\t\tmoonIcon.style.display = 'none';\n\t\t\t\t\t\t\tsunIcon.style.display = 'block';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmoonIcon.style.display = 'block';\n\t\t\t\t\t\t\tsunIcon.style.display = 'none';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update the theme icon after any HTMX content swap\n\t\t\t\tdocument.addEventListener('htmx:afterSettle', function() {\n\t\t\t\t\tconst currentTheme = document.documentElement.getAttribute('data-theme') || 'light';\n\t\t\t\t\tupdateThemeIcon(currentTheme);\n\t\t\t\t});\n\n\t\t\t\t// Ensure theme is applied and icons are updated when DOM is ready\n\t\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\t\tconst savedTheme = localStorage.getItem('theme') || 'light';\n\t\t\t\t\tdocument.documentElement.setAttribute('data-theme', savedTheme);\n\t\t\t\t\tupdateThemeIcon(savedTheme);\n\t\t\t\t});\n\t\t\t</script><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `ui/components/layout.templ`, Line: 192, Col: 17}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " | Bazzite Portal</title></head><body hx-boost=\"true\"><!-- Trigger a heartbeat to keep the server alive --><div hidden hx-swap=\"none\"><div hx-get=\"/_/heartbeat\" hx-trigger=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs("every " + strconv.Itoa(consts.HEARTBEAT_SECONDS/2) + "s")
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `ui/components/layout.templ`, Line: 199, Col: 75}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\"></div><div hx-get=\"/_/heartbeat\" hx-trigger=\"load\"></div></div><header class=\"sticky-header\"><nav class=\"navbar flex justify-between items-center\"><div class=\"logo\"><a href=\"/\"><img src=\"/static/images/logo.png\" alt=\"Bazzite Logo\"></a></div><div class=\"nav-links flex items-center gap-6\"><a href=\"/\">Home</a> <a href=\"https://bazzite.gg\" target=\"_blank\">About</a> <a href=\"https://docs.bazzite.gg\" target=\"_blank\">Docs</a> <a id=\"theme-toggle\" class=\"theme-toggle\" href=\"#\" aria-label=\"Toggle theme\"><svg id=\"moon-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"></path></svg> <svg id=\"sun-icon\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" style=\"display:none;\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"></path></svg></a></div></nav></header><main><div class=\"container mx-auto\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div></main></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
